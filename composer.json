{
    "type": "project",
    "license": "proprietary",
    "minimum-stability": "stable",
    "prefer-stable": true,
    "require": {
        "php": ">=8.2",
        "ext-ctype": "*",
        "ext-iconv": "*",
        "defuse/php-encryption": "^2.4",
        "doctrine/doctrine-bundle": "^2.10",
        "doctrine/doctrine-migrations-bundle": "^3.2",
        "doctrine/orm": "^2.16",
        "guzzlehttp/guzzle": "^7.8",
        "guzzlehttp/psr7": "*",
        "smartassert/api-client": "^8.0",
        "symfony/console": "7.0.*",
        "symfony/dotenv": "7.0.*",
        "symfony/flex": "^2",
        "symfony/framework-bundle": "7.0.*",
        "symfony/monolog-bundle": "^3.8",
        "symfony/psr-http-message-bridge": "7.0.*",
        "symfony/runtime": "7.0.*",
        "symfony/security-bundle": "7.0.*",
        "symfony/twig-bundle": "7.0.*",
        "symfony/yaml": "7.0.*"
    },
    "require-dev": {
        "mockery/mockery": "^1.6",
        "phpstan/extension-installer": "^1.3",
        "phpstan/phpstan": "^1.10",
        "phpstan/phpstan-mockery": "^1.1",
        "phpstan/phpstan-symfony": "^1.3",
        "phpunit/phpunit": "^9.6",
        "smartassert/symfony-test-client": "^2.0",
        "squizlabs/php_codesniffer": "dev-master#7763e2e1f773cb0615ed8afa133189fc804f583d",
        "symfony/css-selector": "7.0.*",
        "symfony/maker-bundle": "^1.51",
        "symfony/phpunit-bridge": "7.0.*"
    },
    "config": {
        "allow-plugins": {
            "php-http/discovery": true,
            "symfony/flex": true,
            "symfony/runtime": true,
            "phpstan/extension-installer": true
        },
        "sort-packages": true
    },
    "autoload": {
        "psr-4": {
            "App\\": "src/"
        }
    },
    "autoload-dev": {
        "psr-4": {
            "App\\Tests\\": "tests/"
        }
    },
    "replace": {
        "symfony/polyfill-ctype": "*",
        "symfony/polyfill-iconv": "*",
        "symfony/polyfill-php72": "*",
        "symfony/polyfill-php73": "*",
        "symfony/polyfill-php74": "*",
        "symfony/polyfill-php80": "*",
        "symfony/polyfill-php81": "*"
    },
    "scripts": {
        "auto-scripts": {
            "cache:clear": "symfony-cmd",
            "assets:install %PUBLIC_DIR%": "symfony-cmd"
        },
        "post-install-cmd": [
            "@auto-scripts"
        ],
        "post-update-cmd": [
            "@auto-scripts"
        ],
        "cs-fixer-dry-run": "docker run --rm $(if [ ! -z \"${NO_TTY}\" ]; then echo \"\"; else echo \"-t\"; fi) -w=/app -v ${PWD}:/app oskarstark/php-cs-fixer-ga:latest --allow-risky=yes --dry-run --verbose --show-progress none",
        "cs-fixer-fix": "docker run --rm $(if [ ! -z \"${NO_TTY}\" ]; then echo \"\"; else echo \"-t\"; fi) -w=/app -v ${PWD}:/app oskarstark/php-cs-fixer-ga:latest --allow-risky=yes --diff",
        "cs-phpcs": "XDEBUG_MODE=off ./vendor/bin/phpcs",
        "static-analysis": "XDEBUG_MODE=off ./vendor/bin/phpstan analyse --ansi",
        "test-unit": "XDEBUG_MODE=off ./vendor/bin/phpunit --colors=always tests/Unit",
        "test-functional": "XDEBUG_MODE=off ./vendor/bin/phpunit --colors=always tests/Functional",
        "test-integration": "XDEBUG_MODE=off ./vendor/bin/phpunit --colors=always tests/Integration",
        "test": [
            "@test-unit",
            "@test-functional"
        ],
        "db-setup": [
            "php bin/console doctrine:database:create --if-not-exists",
            "php bin/console doctrine:migrations:migrate --no-interaction --allow-no-migration"
        ],
        "functional-start": "docker compose -f ./tests/build/docker-compose.yml --profile functional up -d",
        "functional-setup": [
            "@functional-start",
            "sleep 2",
            "@db-setup",
            "@users-setup"
        ],
        "users-db-setup": [
            "docker compose -f tests/build/docker-compose.yml exec -T users-service php bin/console doctrine:database:create --if-not-exists",
            "docker compose -f tests/build/docker-compose.yml exec -T users-service php bin/console doctrine:migrations:migrate --no-interaction --allow-no-migration"
        ],
        "users-generate-jwt-keys": "docker compose -f tests/build/docker-compose.yml exec -T users-service php bin/console lexik:jwt:generate-keypair --overwrite --no-interaction",
        "users-create-user": [
            "curl --header 'Authorization: primary_admin_token' --data 'identifier=user@example.com&password=password' http://localhost:9081/user/create",
            ""
        ],
        "users-setup": [
            "@users-db-setup",
            "@users-generate-jwt-keys",
            "@users-create-user"
        ],
        "integration-build": "docker compose -f tests/build/docker-compose.yml build app",
        "integration-pull": "docker compose -f tests/build/docker-compose.yml pull",
        "integration-up": "docker compose -f ./tests/build/docker-compose.yml --profile functional --profile integration up -d",
        "integration-setup": [
            "@integration-build",
            "@integration-up",
            "sleep 2",
            "@db-setup",
            "@users-setup"
        ],
        "integration-status": "docker compose -f ./tests/build/docker-compose.yml --profile functional --profile integration ps",
        "integration-logs": "docker compose -f tests/build/docker-compose.yml logs",
        "integration-teardown": "docker compose -f ./tests/build/docker-compose.yml --profile functional --profile integration down"
    },
    "conflict": {
        "symfony/symfony": "*"
    },
    "extra": {
        "symfony": {
            "allow-contrib": false,
            "require": "7.0.*"
        }
    }
}
