# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Security/UserCredentials.php'

    App\Controller\:
        resource: '../src/Controller/'
        tags: ['controller.service_arguments']

    SmartAssert\SecurityTokenExtractor\TokenExtractor: ~

    SmartAssert\ServiceClient\ResponseFactory\ResponseFactory:
        factory: ['SmartAssert\ServiceClient\ResponseFactory\ResponseFactory', 'createFactory']

    SmartAssert\ServiceClient\ExceptionFactory\CurlExceptionFactory: ~

    Psr\Http\Client\ClientInterface:
        class: GuzzleHttp\Client

    GuzzleHttp\Psr7\HttpFactory: ~

    Psr\Http\Message\RequestFactoryInterface:
        alias: GuzzleHttp\Psr7\HttpFactory

    Psr\Http\Message\StreamFactoryInterface:
        alias: GuzzleHttp\Psr7\HttpFactory

    Psr\Http\Message\ServerRequestFactoryInterface:
        alias: GuzzleHttp\Psr7\HttpFactory

    Psr\Http\Message\UploadedFileFactoryInterface:
        alias: GuzzleHttp\Psr7\HttpFactory

    Psr\Http\Message\ResponseFactoryInterface:
        alias: GuzzleHttp\Psr7\HttpFactory

    Symfony\Bridge\PsrHttpMessage\HttpMessageFactoryInterface:
        class: Symfony\Bridge\PsrHttpMessage\Factory\PsrHttpFactory

    SmartAssert\ServiceClient\Client: ~

    smartassert.api-client.url-generator:
        class: Symfony\Component\Routing\Generator\UrlGenerator
        factory: ['SmartAssert\ApiClient\UrlGeneratorFactory', 'create']
        arguments:
            $baseUrl: '%env(string:API_CLIENT_BASE_URL)%'

    SmartAssert\ApiClient\UsersClient:
        arguments:
            $urlGenerator: '@smartassert.api-client.url-generator'

    SmartAssert\ApiClient\FileClient:
        arguments:
            $urlGenerator: '@smartassert.api-client.url-generator'

    SmartAssert\ApiClient\FileSourceClient:
        arguments:
            $urlGenerator: '@smartassert.api-client.url-generator'

    SmartAssert\ApiClient\GitSourceClient:
        arguments:
            $urlGenerator: '@smartassert.api-client.url-generator'

    SmartAssert\ApiClient\SourceClient:
        arguments:
            $urlGenerator: '@smartassert.api-client.url-generator'

    App\Security\Encrypter:
        arguments:
            $keys:
                - '%env(string:PRIMARY_TOKEN_ENCRYPTION_KEY)%'
                - '%env(string:SECONDARY_TOKEN_ENCRYPTION_KEY)%'

    App\Security\TokenAuthentication\Authenticator:
        arguments:
            $firewallMap: '@security.firewall.map'

    Symfony\Component\HttpFoundation\Session\Storage\Handler\PdoSessionHandler:
        arguments:
            - '%env(DATABASE_URL)%'
